workspace:
  base: /go
  path: src/github.com/drone/drone

pipeline:
  test:
    image: golang:1.8
    commands:
      - go get -u github.com/drone/drone-ui/dist
      - go get -u golang.org/x/tools/cmd/cover
      - go get -u golang.org/x/net/context
      - go get -u golang.org/x/net/context/ctxhttp
      - go get -u github.com/golang/protobuf/proto
      - go get -u github.com/golang/protobuf/protoc-gen-go
      - go test -cover $(go list ./... | grep -v /vendor/)

  test_mysql:
    image: golang:1.8
    environment:
      - DATABASE_DRIVER=mysql
      - DATABASE_CONFIG=root@tcp(mysql:3306)/test?parseTime=true
    commands:
      - go test github.com/drone/drone/store/datastore

  build:
    image: golang:1.8
    commands:
      - go build -ldflags '-extldflags "-static" -X github.com/drone/drone/version.VersionDev=build.'${DRONE_BUILD_NUMBER} -o release/drone-server github.com/anthosz/drone/cmd/drone-server
      - go build -ldflags '-X github.com/drone/drone/version.VersionDev=build.'${DRONE_BUILD_NUMBER} -o release/drone-agent github.com/drone/drone/cmd/drone-agent
    when:
      event: [ push, tag ]
    environment:
      - GOOS=linux
      - GOARCH=amd64
      - CGO_ENABLED=0

  publish_server:
    image: plugins/docker
    repo: anthosz/drone
    secrets: [ docker_username, docker_password ]
    tag: [ latest ]
    when:
      branch: release/*
      event: push

  release_server:
    image: plugins/docker
    repo: anthosz/drone
    secrets: [ docker_username, docker_password ]
    tag: [ 0.8, 0.8.1 ]
    when:
      event: tag

services:
  mysql:
    image: mysql:5.6.27
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
